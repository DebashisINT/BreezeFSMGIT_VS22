
@using LMS.Models;
@model LMS.Models.LMSContentModel

@{
    ViewBag.Title = "Content";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.css">
<link href="~/assests/pluggins/LightBox/lightbox.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.rtl.css" integrity="sha512-ESMNMKMBWQP7MhGIc/vk75n2qBzCfLhP8q4Ww43m+hhQeUn+aiPCYWV1eyP1uZ7tWda8VtZypCZavihltM+xhw==" crossorigin="anonymous" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/themes/default.rtl.css" integrity="sha512-gi53xi6INSr6sseLKtDMLqAnFouz6jZhAYCLohIRyui0wV53yPWk9mP4oAEA26x12BV0Pvf59La9jS5nXwChiw==" crossorigin="anonymous" />
@*<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>*@
@*<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.min.js"></script>
<script src="~/assests/pluggins/LightBox/lightbox.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>

<script src="~/assests/pluggins/multiSearchable/mock.js"></script>

<link rel="stylesheet" href="/assests/css/ftsNewScreen.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.5/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.5/js/plugins/sortable.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.5/js/fileinput.min.js"></script>
@*<script src="http://malsup.github.com/jquery.form.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.3.0/jquery.form.js"></script>

<link href="/assests/pluggins/Transfer/icon_font/css/icon_font.css" rel="stylesheet" />
<link href="/assests/pluggins/Transfer/css/jquery.transfer.css" rel="stylesheet" />
<script src="/assests/pluggins/Transfer/jquery.transfer.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>

<style>
    .progress {
        height: 10px;
        position: relative;
        overflow: auto;
        margin: 0;
    }

    .percent {
        position: absolute;
        top: -19px;
        right: 0;
    }

    .bar {
        height: 10px;
        background: green;
        width: 0%;
    }

    .file-drop-zone {
        margin: auto !important;
        min-height: 200px;
        border-radius: 12px;
    }

    .krajee-default.file-preview-frame .kv-file-content {
        height: 175px !important;
    }

    .krajee-default .file-footer-caption {
        margin-bottom: 0;
    }

    .modal-dialog.modal-lg {
        left: 0;
    }

    video.kv-preview-data.file-preview-video.file-zoom-detail, .kv-preview-data.file-preview-video {
        height: 170px !important;
    }

    .close.fileinput-remove {
        background: #ec4848;
        opacity: 1;
        color: #fff !important;
        font-size: 25px !important;
        width: 25px;
        height: 25px;
        /* margin: 2px 1px 0 0; */
        border-radius: 15px;
        margin: 9px 9px 0 5px;
    }

    .modal.w90 .modal-dialog {
        width: 90%;
    }

    .form-group {
        margin-bottom: 5px;
    }

    .doc-description {
        height: 59px !important;
        padding-bottom: 6px !important;
        overflow: hidden;
    }

    .mHeader {
        font-size: 31px;
        color: #4c4c4c;
        font-family: 'Poppins';
        background: #efefef;
        margin: 6px 0;
        border-radius: 5px;
        padding: 6px;
    }

    .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        color: #fff;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }
</style>
<style>
    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        color: #fff;
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 20px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal.w70 .modal-dialog {
        width: 90% !important;
    }

    @@media screen and (min-width: 768px) {
        .modal-dialog {
            padding-top: 56px !important;
        }

        #UserSearchModel .modal-dialog, #ReferenceUserSearchModel .modal-dialog {
            padding-top: 100px !important;
        }
    }



    #myModal label {
        font-weight: 500;
        margin-top: 3px;
        margin-bottom: 2px;
        font-size: 13px;
    }

    .red {
        color: red;
    }

    .sample {
        font-size: 12px;
        color: #d48a28;
    }

    .buttonphoto {
        padding: 11px 12px;
        display: inline-block;
        background: #dee3f7;
        margin-top: 11px;
        border-radius: 3px;
        cursor: pointer;
    }

        .buttonphoto:hover {
            background: #415ed2;
            color: #fff;
        }

    .infoQ {
        color: #4b98b8;
        margin-left: 5px;
        cursor: pointer;
    }

    #PanModel {
        z-index: 9999;
    }

    .inputShrink select:not(.btn), .inputShrink .form-control:not(textarea) {
        /*height: 30px;
        padding: 3px 12px;*/
    }

    .modalScroll .modal-body {
        /*max-height: 88vh !important;*/
        overflow-y: auto;
        border-radius: 0 0 15px 15px !important;
    }

    .bulAssignTbl > tbody > tr > td {
        padding-right: 15px;
        padding-bottom: 15px;
    }

    .mHead {
        margin: 0;
        padding: 5px 0;
        border-bottom: 1px solid #ddd;
        color: #415ed2;
        margin-bottom: 13px;
    }

    /*Rev 1.0*/

    body, .dxtcLite_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 7px !important;
        padding: 0 6px !important;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            /*content: '<';*/
            content: url(../../../assests/images/left-arw.png);
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 13px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 7px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 7px;
        right: 20px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select, .h-branch-select-new {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            /*content: url(../../../assests/images/left-arw.png);*/
            position: absolute;
            top: 38px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

        .h-branch-select-new::after {
            content: '<';
            /*content: url(../../../assests/images/left-arw.png);*/
            position: absolute;
            top: 9px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    select:not(.btn):focus {
        border-color: #094e8c;
    }

    select:not(.btn):focus-visible {
        box-shadow: none;
        outline: none;
    }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    select:not(.btn) {
        padding-right: 30px;
        /*-webkit-appearance: none;*/
        position: relative;
        z-index: 1;
        background-color: transparent;
        /*height: 30px !important;*/
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue,
    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 8px;
        height: 38px;
    }

    #dtFrom, #dtTo, #FormDate, #toDate, #appcbl_frm_dt {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .modal-content {
        border: none;
        border-radius: 16px;
    }

    .modal-header .modal-title {
        font-size: 14px;
    }

    .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1, #cmbDOJ_B-1, #cmbLeaveEff_B-1, #FormDate_B-1, #toDate_B-1, #appcbl_frm_dt_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img,
        #cmbDOJ_B-1 #cmbDOJ_B-1Img,
        #cmbLeaveEff_B-1 #cmbLeaveEff_B-1Img,
        #FormDate_B-1 #FormDate_B-1Img, #toDate_B-1 #toDate_B-1Img, #appcbl_frm_dt_B-1 #appcbl_frm_dt_B-1Img {
            display: none;
        }

    #FormDate_I, #toDate_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        /*z-index: 1;*/
        width: 150px;
    }

    .pad-md-18 {
        padding-top: 10px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    .dxeCalendarSelected_PlasticBlue {
        color: White;
        background-color: #185598;
    }

    .dxeTextBox_PlasticBlue {
        height: 34px;
        border-radius: 4px;
    }

    #cmbDOJ_DDD_PW-1 {
        z-index: 9999 !important;
    }

    #cmbDOJ, #cmbLeaveEff {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    .btn-sm, .btn-xs {
        padding: 7px 10px !important;
    }

    #productAttributePopUp_PWH-1 span, #ASPxPopupControl2_PWH-1 span {
        color: #fff !important;
    }

    #marketsGrid_DXPEForm_tcefnew, .dxgvPopupEditForm_PlasticBlue {
        height: 220px !important;
    }

    .btn {
        height: 34px;
        border-radius: 50px;
    }
    /*Rev end 1.0*/
    /*Rev start 3.0*/
    .mrtop-6 {
        margin-top: 6px;
    }

    @@media screen and (min-width: 768px) {
        #AddTopicModal .modal-dialog {
            width: 48% !important;
        }
    }


    .btn-default {
        background-color: #dbdbdb;
    }

        .btn-default:hover, .btn-default:focus, .btn-default:active, .btn-default.active, .open .dropdown-toggle.btn-default {
            background-color: #c1c1c1;
        }

    #ddlSalesmanRe, #ddlSalesman1 {
        -webkit-appearance: auto;
    }

    #divDate #appcbl_frm_dt_DDD_PW-1 {
        left: 15px !important;
    }

    #divDate #appcbl_frm_dt_DDD_C_FNP_PW-1 {
        left: 60px !important;
    }
    /*Rev end 3.0*/
    /*Rev 4.0*/
    #myImportContactModal .modal-body {
        border-radius: 0 0 20px 20px;
    }
    /*End of Rev 4.0*/

    .mt-15 {
        margin-top: 20px;
    }

    .mb-10 {
        margin-bottom: 5px;
    }

    .mr-5 {
        margin-right: 5px;
    }

    .pmsModal .modal-body {
        padding: 0;
        padding-bottom: 60px;
        z-index:0;
    }

        .pmsModal .modal-body .col-md-3, .pmsModal .modal-body .col-md-6, .pmsModal .modal-body .col-md-12 {
            padding-right: 10px;
            padding-left: 10px;
        }

    .personal-info {
        background: #f9f9f9;
        padding: 10px 0;
        border-radius: 10px;
        border: 1px dashed #8f8f8f;
        margin-bottom: 30px;
    }

    .pmsModal .modal-body select:not(.btn), .pmsModal .modal-body .form-control {
        border-radius: 6px !important;
        background: #fff !important;
    }

        .pmsModal .modal-body .form-control:focus {
            box-shadow: none !important;
        }

    .company-info {
        background: #f9f9f9 !important;
        padding: 10px 0;
        border-radius: 10px;
        border: 1px dashed #8f8f8f;
        margin-bottom: 30px;
    }

    .others-info {
        background: #f9f9f9 !important;
        padding: 10px 0;
        border-radius: 10px;
        border: 1px dashed #8f8f8f;
        margin-bottom: 30px;
    }

    .section-heading {
        width: 100%;
        margin-top: -24px;
        padding: 0 0 0 10px;
        margin-bottom: 10px;
    }

    .personal-info .section-heading h4 {
        font-size: 14px !important;
        padding: 6px 15px 6px 10px;
        background: #10977e;
        color: #fff;
        /*border-radius: 20px 20px;*/
        display: inline-block;
        margin: 0;
        font-weight: 400;
        position: relative;
    }

    .company-info .section-heading h4 {
        /*font-size: 16px !important;
        padding: 6px 15px;
        background: #971073;
        color: #fff;
        border-radius: 20px 20px;
        display: inline-block;
        margin: 0;
        font-weight: 400;*/

        font-size: 14px !important;
        padding: 6px 15px 6px 10px;
        background: #971073;
        color: #fff;
        /*border-radius: 20px 20px;*/
        display: inline-block;
        margin: 0;
        font-weight: 400;
        position: relative;
    }

    .others-info .section-heading h4 {
        /*font-size: 16px !important;
        padding: 6px 15px;
        background: #974310;
        color: #fff;
        border-radius: 20px 20px;
        display: inline-block;
        margin: 0;
        font-weight: 400;*/

        font-size: 14px !important;
        padding: 6px 15px 6px 10px;
        background: #974310;
        color: #fff;
        /*border-radius: 20px 20px;*/
        display: inline-block;
        margin: 0;
        font-weight: 400;
        position: relative;
    }

    .ml-n15 {
        margin-right: -18px;
        text-align: end;
    }

    /* width */
    .pmsModal .modal-body::-webkit-scrollbar {
        width: 10px;
    }

    /* Track */
    .pmsModal .modal-body::-webkit-scrollbar-track {
        box-shadow: none;
        border-radius: 10px;
        overflow: hidden;
    }

    /* Handle */
    .pmsModal .modal-body::-webkit-scrollbar-thumb {
        background: #b1b1b1;
        border-radius: 10px;
    }

        /* Handle on hover */
        .pmsModal .modal-body::-webkit-scrollbar-thumb:hover {
            background: #8b8b8b;
        }

    #dtDOB_DDD_PW-1, #dtAnniversarydate_DDD_PW-1, #dtNextFollowDate_DDD_PW-1 {
        left: -25px !important;
    }

    #dtDOB_DDD_C_FNP_PW-1, #dtNextFollowDate_DDD_C_FNP_PW-1 {
        left: 45px !important;
    }

    #dtAnniversarydate_DDD_C_FNP_PW-1 {
        left: 30px !important;
        /*top: 0;*/
    }

    body.modal-open {
        overflow: hidden;
    }

    .btn-clr-1 {
        background-color: #313ec7 !important;
    }

    .btn-clr-2 {
        background-color: #ff6a00 !important;
    }

    .btn-clr-3 {
        background-color: #0ead7f !important;
    }

    .btn-clr-4 {
        background-color: #86a113 !important;
    }

    .bg-color-6 {
        background-color: #bd1c68 !important;
    }

        .bg-color-6 .badge {
            background-color: #fff !important;
            padding: 4px 7px;
            color: #111;
        }

    .btn {
        margin-right: 5px;
        padding: 4px 10px;
    }



    #popup_message {
        text-align: center !important;
        padding: 0 !important;
    }

    #popup_container {
        font-size: 14px !important;
    }

    #popup_panel {
        margin-left: 0 !important;
    }

    #myImportModal .modal-body {
        border-radius: 0 0 20px 20px;
    }

    #dtNextFollowDateOutOfRWarn, #dtDOBOutOfRWarn, #dtAnniversarydateOutOfRWarn {
        left: 0 !important;
        top: 60px !important;
    }

    .dxeOutOfRWarn_PlasticBlue {
        font-size: 13px !important;
    }

    .validationDiv {
        margin-bottom: 10px;
    }

    .btn-radius {
        border-radius: 50px;
        /*float:left;*/
    }

    /*.add-btn .btn-icon {
        border-radius: 50px;
        width: 22px;
        height: 22px;
        display: inline-block;
        background: #0d4d91;
        line-height: 22px;
    }

    .add-btn {
        padding: 6px 10px 6px 6px !important;
        background-color: #f8666f !important;
        border-color: #f8666f !important;
    }*/

    .col-md-1, .col-md-2, .col-md-4 {
        padding-right: 8px !important;
        padding-left: 8px !important;
    }

    .calendar-icon {
        right: 14px !important;
    }

    .personal-info .section-heading h4:before {
        content: "";
        position: absolute;
        right: -11px;
        bottom: 0;
        width: 0;
        height: 0;
        border-left: 11px solid #10977e;
        border-top: 12px solid transparent;
        border-bottom: 14px solid transparent;
    }

    .company-info .section-heading h4:before {
        content: "";
        position: absolute;
        right: -11px;
        bottom: 0;
        width: 0;
        height: 0;
        border-left: 11px solid #971073;
        border-top: 12px solid transparent;
        border-bottom: 14px solid transparent;
    }

    .others-info .section-heading h4:before {
        content: "";
        position: absolute;
        right: -11px;
        bottom: 0;
        width: 0;
        height: 0;
        border-left: 11px solid #974310;
        border-top: 12px solid transparent;
        border-bottom: 14px solid transparent;
    }

    /*.personal-info .section-heading h4:after {
        content: "";
        position: absolute;
        left: -1px;
        bottom: 0;
        width: 0;
        height: 0;
        border-left: 1px solid white;
        border-top: 14px solid transparent;
        border-bottom: 14px solid transparent;
    }*/

    .personal-info .section-heading h4 .bulet, .company-info .section-heading h4 .bulet, .others-info .section-heading h4 .bulet {
        position: absolute;
        right: 0px;
        top: 11px;
        background: #fff;
        width: 5px;
        height: 5px;
        border-radius: 50%;
        box-shadow: 0px 0px 1px 2px rgb(26, 128, 44);
    }

    .company-info .section-heading h4 .bulet {
        box-shadow: 0px 0px 1px 2px rgb(81 5 61) !important;
    }

    .others-info .section-heading h4 .bulet {
        box-shadow: 0px 0px 1px 2px rgb(99 39 3) !important;
    }

    /*#btnshow, #ddlAppIds {
        height: 30px;
    }*/

    #ddlAppIds {
        padding: 2px 10px !important;
    }

    #UserSearchModel .modal-dialog, #ReferenceUserSearchModel .modal-dialog {
        width: 42% !important;
    }

    .container {
        width: 88%;
    }

    .only-view {
        cursor: default !important;
    }

    @@media (min-width: 1200px) {
        .container {
            width: 88%;
        }
    }

    /*.transfer-demo {
        width: 640px;
        height: 351px;
    }*/

    .transfer-demo .transfer-double-header {
        display: none;
    }

    .transfer-double-selected-list-main .transfer-double-selected-list-ul .transfer-double-selected-list-li .checkbox-group {
        width: 85%;
    }

    .red {
        color: red;
    }

    input:focus, textarea:focus, select:focus {
        outline: none;
    }

    .transfer-double-content-param {
        border-bottom: 1px solid #4236f5;
        background: #4236f5;
        color: #e8e8e8;
    }

    .top-count-filter {
        display: flex;
        align-items: center;
        justify-content: center;
        padding-bottom: 15px;
        /*background: #f3f3f3;
        border-radius: 15px 15px 0 0;*/
    }

        .top-count-filter .btn {
            height: auto;
            border-radius: 15px;
            padding: 10px 15px 5px 15px;
            margin: 10px 10px 0 10px;
            transition: all .5s;
        }

            .top-count-filter .btn h5 {
                font-size: 16px;
                font-weight: 400;
                margin: 0;
                margin-bottom: 5px !important;
            }

    .filter-count {
        font-size: 20px;
        font-weight: 500;
    }

    .btn-total {
        background-color: rgb(10 63 166 / 9%) !important;
        display: flex;
        align-items: center;
        padding-right: 0 !important;
        color: #fff;
        padding-top: 0 !important;
        padding-bottom: 0 !important;
        overflow: hidden !important;
    }

        .btn-total.active {
            background-color: rgb(10 63 166 / 100%) !important;
        }

            .btn-total.active h5 {
                color: #fff;
            }

        .btn-total:hover {
            background-color: rgb(10 63 166) !important;
            color: #fff !important;
        }

            .btn-total:hover h5, .btn-total:hover .filter-count,
            .btn-total-used:hover h5, .btn-total-used:hover .filter-count,
            .btn-total-unused:hover h5, .btn-total-unused:hover .filter-count {
                color: #fff !important;
            }

        .btn-total h5, .btn-total-used h5, .btn-total-unused h5 {
            color: #111;
            margin: 0;
        }

    .count-filter-btns .btn {
        margin-left: 6px;
    }

    /*.btn-total .filter-count {
        color: #0D3B8C;
    }*/

    .btn-total .filter-count {
        color: #ffffff;
        background: #054682;
        height: 38PX;
        line-height: 38px;
        min-width: 30px;
        margin-left: 10px;
        padding-left: 5px;
        padding-right: 5px;
    }

    .btn-total-used {
        background-color: #cbffe4 !important;
        display: flex;
        align-items: center;
        padding-right: 0 !important;
        color: #fff;
        padding-top: 0 !important;
        padding-bottom: 0 !important;
        overflow: hidden !important;
    }

        .btn-total-used.active {
            background-color: #0b8b48 !important;
        }

            .btn-total-used.active h5 {
                color: #fff;
            }

        .btn-total-used:hover {
            background-color: #0b8b48 !important;
            color: #fff !important;
        }

        .btn-total-used .filter-count {
            color: #fff;
            background: #0c8f38;
            height: 38px;
            line-height: 38px;
            min-width: 30px;
            margin-left: 10px;
            padding-left: 5px;
            padding-right: 5px;
        }

    .btn-total-unused {
        background-color: #ffe1e1 !important;
        display: flex;
        align-items: center;
        padding-right: 0 !important;
        color: #fff;
        padding-top: 0 !important;
        padding-bottom: 0 !important;
        overflow: hidden !important;
    }

        .btn-total-unused.active {
            background-color: #d01616 !important;
        }

            .btn-total-unused.active h5 {
                color: #fff;
            }

        .btn-total-unused:hover {
            background-color: #d01616 !important;
            color: #fff !important;
        }

        .btn-total-unused .filter-count {
            color: #fff;
            background: #d80606;
            height: 38px;
            line-height: 38px;
            min-width: 30px;
            margin-left: 10px;
            padding-left: 5px;
            padding-right: 5px;
        }

    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .count-filter-btns {
        display: flex;
        align-items: center;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 38px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
    }

        .show-btn:hover {
            background: #072743;
        }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #a24716 !important;
            color: #fff;
        }

    .transfer-double, .transfer-double-list-search-input, .transfer-double-selected-list-search-input {
        width: 100%;
    }

    .transfer-double {
        border: none;
    }

    .transfer-double-content {
        padding: 0;
    }

    .transfer-double-content-left, .transfer-double-content-right {
        width: 45%;
        border-radius: 15px;
        overflow: hidden;
    }

    .transfer-double-content-middle {
        width: 10%;
        margin: 0 !important;
        margin-top: 20% !important;
    }

    .transfer-double-list-main .transfer-double-list-ul, .transfer-double-selected-list-main .transfer-double-selected-list-ul {
        padding-left: 5px;
    }

    .transfer-double-list-footer {
        padding-left: 0;
        height: auto;
        background: #FADBFF;
    }



    .btn-select-arrow {
        width: 34px;
        height: 34px;
        line-height: 34px;
        border-radius: 50px;
        color: #fff;
        background: #b4b4b4;
    }

    .btn-arrow-active {
        color: #fff;
        background: #27ac15 !important;
        cursor: pointer;
    }

    .transfer-double-content-param {
        color: #fff;
    }

    .swal2-confirm.swal2-styled {
        border-radius: 12px !important;
    }

    .swal2-styled {
        border-radius: 12px !important;
        padding: 8px 20px !important;
        color: #fff !important;
        font-size: 14px !important;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 20%) !important;
    }

    @@media screen and (min-width: 768px) {
        #AddContentModal .modal-dialog {
            width: 68% !important;
        }
    }

    @@media screen and (min-width: 768px) {
        #MapQuestionListModal .modal-dialog {
            width: 48% !important;
        }
    }

    @@media screen and (min-width: 768px) {
        #AddQuestionMapModal .modal-dialog {
            width: 68% !important;
        }
    }

    @@media screen and (min-width: 768px) {
        #MappedQuestionsForViewModal .modal-dialog {
            width: 48% !important;
        }
    }
    

    .mainWraper select[multiple], select[size] {
        height: auto !important;
    }
</style>

<style type="text/css">
    .video-frame {
        width: 100%;
        height: 195px;
        border: 4px solid #f7f7f7;
        box-shadow: 1px 2px 3px rgb(64 64 64 / 40%);
        border-radius: 3px;
        position: relative;
        border-radius: 5px;
        overflow: hidden;
        margin-bottom: 15px;
    }

    .title {
        font-weight: 500;
        font-size: 14px;
        text-align: center;
        margin-bottom: 10px;
        margin-top: 10px;
        background-color: #57aadc;
        color: white;
        /* box-shadow: 1px 2px 4px rgb(72 72 72 / 40%); */
        border-radius: 3px;
        padding: 1px 5px;
    }

    .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 50%;
    }

    .butHolder {
        position: absolute;
        right: 20px;
        top: 15px;
        display: inline-block;
        background: rgb(230 230 230);
        padding: 4px 10px;
        border-radius: 19px;
        box-shadow: 0px 2px 5px rgb(58 57 57 / 23%);
        transition: all 0.25s ease-in;
        -webkit-transition: all 0.25s ease-in;
        opacity: 0;
        -webkit-transform: translateY(-100px);
        transform: translateY(-100px);
        z-index: 999;
    }

    .video-frame:hover .butHolder {
        transform: translateY(0);
        opacity: 1;
    }

    .butHolder > i, .butHolder > span {
        margin-right: 8px;
        cursor: pointer !important;
    }

        .butHolder > i:hover {
            color: #57aadc;
        }

        .butHolder > span > img {
            max-width: 18px;
        }

    .fileinput-upload {
        display: none !important;
    }


    .video-card {
        border: none;
        border-radius: 10px;
        /*overflow: hidden;*/
        box-shadow: 1px 1px 10px #11111142;
        margin-bottom: 30px;
    }

        .video-card .card-img-top {
            height: 170px;
            object-fit: cover;
            width: 100%;
            object-position: center;
            border-radius: 10px 10px 0 0;
        }

        .video-card .card-body {
            /*text-align: center;*/
            padding: 0 15px 10px;
            /*background: linear-gradient(1deg, #beefff, #ffffff);*/
            display: flex;
            align-items: flex-start;
            /*justify-content: space-between;*/
        }

        .video-card .card-title {
            font-size: 16px;
            font-weight: bold;
            margin-bottom: 5px;
            line-height: 22px;
            min-height: 45px;
            margin-top: 5px;

        }

    .card-body-content {
        width: 80%;
    }

    .video-card .action-dropdown {
        width: 20%;
    }

        .video-card .card-text {
            margin-bottom: 15px;
        }

        .video-card .card-buttons button {
            margin: 5px;
        }

        .video-card .badge-success {
            background-color: #28a745;
        }

    .card-buttons .btn {
        background: transparent;
        box-shadow: none;
        border: none;
        padding: 0;
        width: 35px;
    }

        .card-buttons .btn img {
            width: 100%;
        }

    .content-listing-part {
        margin-top: 10px;
        margin-bottom: 20px;
    }

    /*#btnSearch, #btnShowAll {
        display: inline-block;
        margin-top: 10px;
    }*/

    .content-search-box {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .content-search-box #searchInput {
            width: 60%;
            height: 38px;
            border-radius: 6px 0 0 6px;
        }

        .content-search-box #btnSearch {
            border-radius: 0 6px 6px 0;
        }

    .pagination {
        display: flex;
        justify-content: flex-end;
        padding: 0;
        margin: 5px 0;
        list-style: none;
        border-radius: 4px;
    }

        .pagination li {
            display: inline;
            margin: 0 2px;
        }

            .pagination li a {
                color: #000;
                background-color: #f5f5f5;
                border: 1px solid #ddd;
                padding: 6px 12px;
                text-decoration: none;
                border-radius: 4px;
            }

            .pagination li.active a {
                color: #fff;
                background-color: #051f7b;
                border-color: #051f7b;
            }

            .pagination li.disabled a {
                color: #777;
                background-color: #fff;
                border-color: #ddd;
                cursor: not-allowed;
            }

    .active-checkbox
    {
        margin-top: 12px;
    }

    .btn.fileinput-remove
    {
        margin-left: 0 !important;
    }

    .btn-file, .fileinput-remove {
        height: 45px;
    }

    .file-caption-main .kv-fileinput-caption {
        border-radius: 6px 0 0 6px !important;
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 1;
        bottom: 115%;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .icon {
        width: 50px;
        height: 50px;
    }

    .file-preview {
        border: none;
        padding: 0;
        margin-bottom: 15px;
    }

    .file-drop-zone {
        border: 2px dashed #aaa;
        background: #f4f4f4;
    }

        .file-drop-zone.file-highlighted {
            border: 2px dashed #588dcd !important;
            background: #eeedff !important;
        }

    .krajee-default.file-preview-frame {
        background: #fff !important;
    }

    .flex-label a {
        /*text-decoration: underline;*/
        color: #098941;
    }

    .flex-label a i {
        background: #098941;
        color: #fff;
        width: 16px;
        height: 16px;
        text-align:center;
        line-height: 17px;
        font-size: 12px;
        border-radius: 50%;
        margin-right: 3px;
    }

    .flex-label {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .modal-footer, .pmsModal .modal-header {
        /*background: linear-gradient(92deg, #1eccd9, #062a75) !important;*/
        background: transparent !important;
    }

    .pmsModal .modal-content
    {
        overflow: hidden;
    }

    .modal-backdrop.in {
        opacity: .8;
    }

    /*fieldset {
        display: none;
    }

    .step {
        display: block;
    }*/

    /*form styles*/
    #msform {
        text-align: center;
        position: relative;
        margin-top: 30px;
    }

        #msform fieldset {
            background: white;
            border: 0 none;
            border-radius: 8px;
            /*box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);
            padding: 20px 30px;
            box-sizing: border-box;*/
            width: 70%;
            margin: 0 15%;
            /*stacking fieldsets above each other*/
            position: relative;
        }

            /*Hide all except first fieldset*/
            #msform fieldset:not(:first-of-type) {
                display: none;
            }

        /*inputs*/


        /*buttons*/
        #msform .action-button {
            width: 135px;
            background: #2098ce;
            font-weight: 500;
            color: white;
            border: 0 none;
            border-radius: 25px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px;
        }

            #msform .action-button:hover, #msform .action-button:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #2098ce;
            }

        #msform .action-button-previous {
            width: 135px;
            background: #e78d20;
            font-weight: 500;
            color: white;
            border: 0 none;
            border-radius: 25px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px;
        }

            #msform .action-button-previous:hover, #msform .action-button-previous:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #aCbEd0;
            }

    /*headings*/
    .fs-title {
        font-size: 18px;
        text-transform: uppercase;
        color: #2C3E50;
        margin-bottom: 10px;
        letter-spacing: 2px;
        font-weight: bold;
    }

    .fs-subtitle {
        font-weight: normal;
        font-size: 13px;
        color: #666;
        margin-bottom: 20px;
    }

    /*progressbar*/
    #progressbar {
        margin-bottom: 5px;
        overflow: hidden;
        /*CSS counters to number the steps*/
        counter-reset: step;
    }

        #progressbar li {
            list-style-type: none;
            color: #666;

            font-size: 9px;
            width: 50%;
            float: left;
            position: relative;
            letter-spacing: 1px;
            text-align:center;
        }

            #progressbar li h5
            {
                font-size: 16px;
                color: #111;
                margin-top: 2px;
            }

            #progressbar li span
            {
                font-size: 12px;
            }

            #progressbar li.active h5, #progressbar li.active span {
                color: #2056ce;
            }

            #progressbar li:before {
                content: counter(step);
                counter-increment: step;
                width: 30px;
                height: 30px;
                line-height: 30px;
                display: block;
                font-size: 15px;
                color: #333;
                background: #dbdbdb;
                border-radius: 40px;
                margin: 0 auto 10px auto;
            }

            /*progressbar connectors*/
            #progressbar li:after {
                content: '';
                width: 100%;
                height: 3px;
                background: #dbdbdb;
                position: absolute;
                left: 0%;
                top: 14px;
                z-index: -1; /*put it behind the numbers*/
            }

            #progressbar li:first-child:after {
                /*connector not needed before the first step*/
                /*content: none;*/
            }

            /*marking active/completed steps blue*/
            /*The number of the step and the connector before it = blue*/
            #progressbar li.active:before, #progressbar li.active:after {
                background: #2056ce;
                color: white;
            }

    /*.ftr-btns
    {
        display: flex;
        align-items:center;
        justify-content: center;
    }*/


    .example
    {
        top: 50%;
        transform: translateY(-50%);
    }

    .btn-toggle {
        margin: 0 5px;
        padding: 0;
        position: relative;
        border: none;
        height: 28px;
        width: 57px;
        border-radius: 1.5rem;
        color: #6b7381;
        background: #bdc1c8;
    }

        .btn-toggle:focus,
        .btn-toggle.focus,
        .btn-toggle:focus.active,
        .btn-toggle.focus.active {
            outline: none;
        }

        .btn-toggle:before,
        .btn-toggle:after {
            line-height: 1.5rem;
            width: 4rem;
            text-align: center;
            font-weight: 600;
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 2px;
            position: absolute;
            bottom: 0;
            transition: opacity 0.25s;
        }

        .btn-toggle:before {
            content: 'Off';
            left: -4rem;
        }

        .btn-toggle:after {
            content: 'On';
            right: -4rem;
            opacity: 0.5;
        }

        .btn-toggle > .handle {
            position: absolute;
            top: 4px;
            left: 4px;
            width: 20px;
            height: 20px;
            border-radius: 1.125rem;
            background: #fff;
            transition: left 0.25s;
        }

        .btn-toggle.active {
            transition: background-color 0.25s;
        }

            .btn-toggle.active > .handle {
                left: 33px;
                transition: left 0.25s;
            }

            .btn-toggle.active:before {
                opacity: 0.5;
            }

            .btn-toggle.active:after {
                opacity: 1;
            }

        .btn-toggle.btn-sm:before,
        .btn-toggle.btn-sm:after {
            line-height: 28px;
            color: #fff;
            letter-spacing: 0.75px;
            left: 8px;
            width: 44px;
            font-size: 12px;
        }

        .btn-toggle.btn-sm:before {
            text-align: right;
        }

        .btn-toggle.btn-sm:after {
            text-align: left;
            opacity: 0;
        }

        .btn-toggle.btn-sm.active:before {
            opacity: 0;
        }

        .btn-toggle.btn-sm.active:after {
            opacity: 1;
        }




        .btn-toggle:before,
        .btn-toggle:after {
            color: #6b7381;
        }

        .btn-toggle.active {
            background-color: #29b5a8;
        }

    .thumbnail-box {
        width: 100%;
        height: 216px;
        border: 1px solid #aaa;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

        .thumbnail-box .btn img {
            width: 24px;
            margin-right: 2px;
        }

        .thumbnail-box .btn
        {
            margin: 5px 0;
        }

    .text-muted {
        color: #6f6f6f !important;
    }

    .action-dropdown .dropdown-toggle {
        background: #ad8df1;
        width: 36px;
        height: 36px;
        line-height: 36px;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        margin-left: auto;
        transition: all .3s;
    }

        .action-dropdown .dropdown-toggle:hover, .action-dropdown .dropdown-toggle:focus {
            background: #6130c9;
        }

        .action-dropdown .dropdown-toggle img {
            width: 24px;
        }

    .action-dropdown .dropdown-menu {
        right: 0;
        left: auto;
        border-radius: 10px;
        border: none;
        box-shadow: 1px 1px 10px #11111136;
    }

        .action-dropdown .dropdown-menu li {
            border-bottom: 1px solid #efefef;
        }

        .action-dropdown .dropdown-menu li:last-child
        {
            border: none;
        }

        .action-dropdown .dropdown-menu > li > a {
            font-size: 16px;
            padding: 6px 20px;
            cursor: pointer;
        }

    #btnShowAll img
    {
        width:20px;
        margin-right:5px;
    }

    .card-status {
        background: #dcdcdc;
        color: #000;
        padding: 5px 10px;
        border-radius: 6px;
        display: inline-block;
        font-size: 12px;
        padding-left: 18px;
    }

        .card-status.published {
            background: #69e889 !important;
            /*color: #fff;*/
        }

    .file-caption-main
    {
        display: none;
    }

    #msform .action-button {
        position: absolute;
        right: 40%;
    }

    .upload-next {
        right: 0;
        bottom: -51px;
    }

    #msform .action-button-previous {
        position: absolute;
        left: 28%;
        bottom: -51px;
    }

    .upload-exit-btn {
        position: absolute;
        right: 34%;
        bottom: 20px;
        border-radius: 50px;
        font-weight: 500;
        color: white;
        border: 0 none;
        border-radius: 25px;
        cursor: pointer;
        padding: 10px 20px;
    }

    .upload-btn {
        padding: 8px 15px;
        border: 2px solid #111;
        color: #111;
        border-radius: 10px;
    }

    .upload-btn img
    {
        width: 20px;
    }

    .custom-file {
        text-align: center;
    }

    .delete-option:hover {
        background-color: red !important;
        color: #fff !important;
    }

    .unpublished, .published {
        position: relative;
    }

        .published:before {
            content: '\f00c';
            position: absolute;
            left: 3px;
            top: 4px;
            font-family: 'FontAwesome';
            font-size: 13px;
            font-weight: 500;
        }

        .unpublished:before {
            content: '\f00d';
            position: absolute;
            left: 4px;
            top: 4px;
            font-family: 'FontAwesome';
            font-size: 13px;
            font-weight: 500;
        }

    .add-new-btn {
        
        -webkit-animation: pulse 1s;
        animation: pulse-afct 1s;
        box-shadow: 0 0 0 20px transparent;
        -webkit-animation-iteration-count: infinite;
        animation-iteration-count: infinite;
    }

@@-webkit-keyframes pulse-afct {
    0% {
        box-shadow: 0 0 0 0 #164f929e;
    }
}

@@keyframes pulse-afct {
    0% {
        box-shadow: 0 0 0 0 #164f929e;
    }
}

    #AddQuestionMapModal .modal-title
    {
        color: #111;
        font-size: 24px;
    }

    #AddQuestionMapModal .modal-header {
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .map-content-title
    {
        font-size: 20px;
        margin-bottom: 10px;
    }

    #AddQuestionMapModal .modal-content {
        background: linear-gradient(1deg, #beefff, #ffffff);
        overflow: visible !important;
    }

    #AddQuestionMapModal .modal-body {
        padding-bottom: 0px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }

    .transfer-double
    {
        background: transparent;
    }

    .transfer-double-content-left, .transfer-double-content-right {
        background: #fff;
        box-shadow: 1px 1px 10px #1111112e;
    }

    .transfer-double-content-middle {
        display: flex;
        align-items: center;
        flex-direction: column;
        margin-top: 13% !important;
    }

    #MapQuestionListModal .modal-title {
        color: #111;
        font-size: 24px;
    }

    #MapQuestionListModal .modal-header {
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    #MapQuestionListModal .modal-body {
        padding-bottom: 20px;
    }

</style>


<script>
    var Is_PageLoad = "Ispageload";

    var Is_ContentId = "0";
    var Is_ContentTitle = "";

    //$(document).ready(function () {

    //    $("#fileupload").fileinput();

    //    // with plugin options
    //    $("#fileupload").fileinput({ 'showUpload': false, 'previewFileType': 'any' });
    //});

    $(function () {

        //$('body').on('click', '#btnshow', function () {

        //    var flag = true;

        //    Is_PageLoad = "1";


        //    setTimeout(function () {
        //        $.ajax({
        //            type: "POST",
        //            url: "/LMSContentUpload/GetContentGridListData",

        //            async: false,
        //            contentType: "application/json; charset=utf-8",
        //            dataType: "json",
        //            success: function (data) {
        //                if (data.length > 0) {
        //                    $("#btnShowTotalContents").text(data[0].cnt_TotalContents);
        //                    $("#btnShowActiveContents").text(data[0].cnt_ActiveContents);
        //                    $("#btnShowInactiveContents").text(data[0].cnt_InactiveContents);
        //                }



        //            },
        //            error: function (response) {
        //                jAlert("Please try again later");
        //            }
        //        });
        //    }, 1000)

        //});

        /*document.addEventListener('DOMContentLoaded', function () {*/
            var allVideosData = [];
            var filteredData = [];
            var currentPage = 1;
            var itemsPerPage = 8;
            var activeFilter = 'all';

            $(document).ready(function() {
                $('body').on('click', '#btnshow', function () {
                    var flag = true;
                    Is_PageLoad = "1";

                    $("btnShowTotalContents").addClass("active");
                    $("#btnShowActiveContents").removeClass("active");
                    $("#btnShowInactiveContents").removeClass("active");

                    setTimeout(function () {
                        $.ajax({
                            type: "POST",
                            url: "/LMSContentUpload/GetContentGridListData",
                            async: false,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                if (data.length > 0) {
                                    $("#btnShowTotalContents .filter-count").text(data[0].cnt_TotalContents);
                                    $("#btnShowActiveContents .filter-count").text(data[0].cnt_ActiveContents);
                                    $("#btnShowInactiveContents .filter-count").text(data[0].cnt_InactiveContents);

                                    allVideosData = data;
                                    filteredData = data;
                                    displayVideos(filteredData, currentPage);

                                    $('#searchPanel').show();
                                    $('#contentListing').show();
                                }
                            },
                            error: function (response) {
                                alert("Please try again later");
                            }
                        });
                    }, 1000);
                });

                $('body').on('click', '#btnSearch', function () {
                    performSearch();
                });

                $('body').on('keypress', '#searchInput', function (e) {
                    if (e.which === 13) { // Enter key pressed
                        performSearch();
                    }
                });

                $('body').on('click', '#btnShowAll', function () {
                    $('#searchInput').val('');
                    currentPage = 1;
                    filteredData = allVideosData;
                    displayVideos(filteredData, currentPage);

                    $("btnShowTotalContents").addClass("active");
                    $("#btnShowActiveContents").removeClass("active");
                    $("#btnShowInactiveContents").removeClass("active");
                });

                $('body').on('click', '#btnShowTotalContents', function () {
                    activeFilter = 'all';
                    $('#searchInput').val('');
                    currentPage = 1;
                    filteredData = allVideosData;
                    displayVideos(filteredData, currentPage);

                    $("btnShowTotalContents").addClass("active");
                    $("#btnShowActiveContents").removeClass("active");
                    $("#btnShowInactiveContents").removeClass("active");
                });

                $('body').on('click', '#btnShowActiveContents', function () {
                    activeFilter = 'active';
                    $('#searchInput').val('');
                    currentPage = 1;
                    filteredData = allVideosData.filter(item => item.CONTENTSTATUS === "Yes");
                    displayVideos(filteredData, currentPage);

                    $("btnShowTotalContents").removeClass("active");
                    $("#btnShowActiveContents").addClass("active");
                    $("#btnShowInactiveContents").removeClass("active");
                });

                $('body').on('click', '#btnShowInactiveContents', function () {
                    activeFilter = 'inactive';
                    $('#searchInput').val('');
                    currentPage = 1;
                    filteredData = allVideosData.filter(item => item.CONTENTSTATUS === "No");
                    displayVideos(filteredData, currentPage);

                    $("btnShowTotalContents").removeClass("active");
                    $("#btnShowActiveContents").removeClass("active");
                    $("#btnShowInactiveContents").addClass("active");
                });

                $('body').on('click', '.pagination-btn', function (e) {
                    e.preventDefault();
                    currentPage = parseInt($(this).data('page'));
                    displayVideos(filteredData, currentPage);
                });

                $('body').on('click', '.pagination-prev', function (e) {
                    e.preventDefault();
                    if (currentPage > 1) {
                        currentPage -= 1;
                        displayVideos(filteredData, currentPage);
                    }
                });

                $('body').on('click', '.pagination-next', function (e) {
                    e.preventDefault();
                    var totalPages = Math.ceil(filteredData.length / itemsPerPage);
                    if (currentPage < totalPages) {
                        currentPage += 1;
                        displayVideos(filteredData, currentPage);
                    }
                });

                function performSearch() {
                    var searchQuery = $('#searchInput').val().toLowerCase();
                    filteredData = allVideosData.filter(function (item) {
                        var matchesStatus = (activeFilter === 'all') ||
                                            (activeFilter === 'active' && item.CONTENTSTATUS === "Yes") ||
                                            (activeFilter === 'inactive' && item.CONTENTSTATUS === "No");

                        return matchesStatus && item.CONTENTTITLE.toLowerCase().includes(searchQuery);
                    });
                    currentPage = 1;
                    displayVideos(filteredData, currentPage);
                }

                function displayVideos(data, page) {
                    var videoContainer = $('#videoContainer');
                    videoContainer.empty();

                    var startIndex = (page - 1) * itemsPerPage;
                    var endIndex = Math.min(startIndex + itemsPerPage, data.length);
                    var pageData = data.slice(startIndex, endIndex);

                    pageData.forEach(function (item) {
                        var videoPath = item.CONTENT_FILEPATH.replace('~', '');
                        var status = item.CONTENTSTATUS === "Yes" ? "Published" : "Unpublished";
                        var statusClass = item.CONTENTSTATUS === "Yes" ? "published" : "unpublished";
                        var videoCardHtml = `
                            <div class="col-md-3">
                                <div class="card video-card" data-video-src="${videoPath}">
                                    <canvas class="card-img-top videoThumbnail"></canvas>
                                    <video class="video" style="display:none;">
                                        <source src="${videoPath}" type="video/mp4">
                                        Your browser does not support the video tag.
                                    </video>
                                    <div class="card-body">
                                        <div class="card-body-content">
                                            <h5 class="card-title">${item.CONTENTTITLE}</h5>
                                            <p class="card-status ${statusClass}">${status}</p>
                                        </div>

                                        <div class="dropdown action-dropdown">
                                          <button class="btn dropdown-toggle tooltip-container" type="button" data-toggle="dropdown">
                                            <img src="../../../assests/images/more.svg">
                                            <div class="tooltip">Options</div>
                                          </button>
                                          <ul class="dropdown-menu">
                                            <li><a onclick="MapQuestionWithContent('${item.CONTENTID}','${item.CONTENTTITLE}')">Map Questions</a></li>
                                            <li><a onclick="OpenLMSContentforEdit('${item.CONTENTID}')">Edit Content</a></li>
                                            <li><a style="color: red" class="delete-option" onclick="OnClickDeleteLMSContent('${item.CONTENTID}')">Delete</a></li>
                                          </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                        videoContainer.append(videoCardHtml);
                    });

                    generateThumbnails();
                    displayPagination(data.length, page);
                }



                function generateThumbnails() {
                    var videoCards = document.querySelectorAll('.video-card');

                    videoCards.forEach(function (card) {
                        var video = card.querySelector('.video');
                        var canvas = card.querySelector('.videoThumbnail');
                        var context = canvas.getContext('2d');

                        video.addEventListener('loadeddata', function () {
                            canvas.width = video.videoWidth;
                            canvas.height = video.videoHeight;
                            video.currentTime = 2;
                        });

                        video.addEventListener('seeked', function () {
                            context.drawImage(video, 0, 0, canvas.width, canvas.height);
                        });

                        video.load();
                    });
                }

                function displayPagination(totalItems, currentPage) {
                    var paginationContainer = $('#paginationContainer');
                    paginationContainer.empty();

                    var totalPages = Math.ceil(totalItems / itemsPerPage);

                    var paginationHtml = '<li><a href="#" class="pagination-prev" data-page="' + (currentPage - 1) + '">Prev</a></li>';

                    for (var i = 1; i <= totalPages; i++) {
                        paginationHtml += `
                            <li class="${i === currentPage ? 'active' : ''}">
                                <a href="#" class="pagination-btn" data-page="${i}">${i}</a>
                            </li>
                        `;
                    }

                    paginationHtml += '<li><a href="#" class="pagination-next" data-page="' + (currentPage + 1) + '">Next</a></li>';

                    paginationContainer.append(paginationHtml);

                    if (currentPage === 1) {
                        $('.pagination-prev').parent().addClass('disabled');
                    }
                    if (currentPage === totalPages) {
                        $('.pagination-next').parent().addClass('disabled');
                    }
                }


            });


        /*});*/



        var bar = $('.bar');
        var percent = $('.percent');
        var status = $('#status');

        $('form').ajaxForm({
            beforeSend: function () {
                //status.empty();
                var percentVal = '0%';
                bar.width(percentVal);
                percent.html(percentVal);
            },
            uploadProgress: function (event, position, total, percentComplete) {
                var percentVal = percentComplete + '%';
                bar.width(percentVal);
                percent.html(percentVal);
            },
            complete: function (xhr) {
                // status.html(xhr.responseText);

                if (xhr.responseText != '') {
                    alertify.set('notifier', 'position', 'bottom-left');

                    if (JSON.parse(xhr.responseText) == 'Content added succesfully.' || JSON.parse(xhr.responseText) == 'Content updated succesfully.')
                        jAlert(JSON.parse(xhr.responseText), 'success', function () { window.location.href = '/LMS/LMSContentUpload/Index'; });
                    else
                    //var notification = alertify.error(JSON.parse(xhr.responseText));
                        //jAlert(JSON.parse(xhr.responseText), 'fail', function () { window.location.href = '/LMS/LMSContentUpload/Index'; });
                        jAlert(JSON.parse(xhr.responseText), 'fail');

                }
            }
        });

        $(document).ready(function () {
            $("#fileupload").fileinput({
                'showUpload': false,
                'previewFileType': 'any',
                'theme': 'fas',
                'browseOnZoneClick': true,
                'allowedFileExtensions': ['mp4'],
                'showRemove': true,
                'removeClass': 'btn btn-danger',
                'removeIcon': '<i class="fas fa-trash-alt"></i>',
                'dropZoneTitle': 'Drag & drop files here',
                'dropZoneClickTitle': '',
                'layoutTemplates': {
                    footer: '',
                    actions: ''
                }
            });

            $('#fileupload').on('change', function (event) {
                handleFileChange(event);
            });

            $('#fileupload').on('fileclear', function () {
                $('#file-name').text('');
            });

            function handleFileChange(event) {
                if (!event || !event.target || !event.target.files || event.target.files.length === 0) {
                    return;
                }

                const file = event.target.files[0];
                if (file.size > @ViewBag.LMSVideoUploadSize * 1024 * 1024) {
                    alertify.set('notifier', 'position', 'bottom-left');
                    $('#fileupload').fileinput('clear');
                    setTimeout(function () { $('#fileupload').fileinput('refresh'); }, 1000);
                    alertify.notify('Maximum file size @ViewBag.LMSVideoUploadSize MB Supported', 'error', 3);
                    return;
                }

                const name = file.name;
                const ext = name.split('.').pop().toLowerCase();

                if (ext !== 'mp4') {
                    alertify.set('notifier', 'position', 'bottom-left');
                    $('#fileupload').fileinput('clear');
                    setTimeout(function () { $('#fileupload').fileinput('refresh'); }, 1000);
                    alertify.notify('File type not Supported', 'error', 3);
                    return;
                }

                $('#file-name').text(name);
            }
        });

         $('body').on('click', '#btnExportTo', function () {
             var url = '@Url.Action("ExporRegisterList", "LMSContentUpload")'
             window.location.href = url.replace("_type_");
         });

    });

    function OnStartCallback(s, e) {
        e.customArgs["Is_PageLoad"] = Is_PageLoad;
    }

    function AddContent() {
        $("#hdnAddEditMode").val('ADDCONTENT');
        $("#hdnContentID").val(0);
        $("#txtContentTitle").val('');
        $("#txtContentDesc").val('');
        $("#ddlTopic").val(0);
        //LMSTopicGridLookup.SetValue();
        $("#numPlaySequence").val(1);
        $("#chkStatus").prop("checked", true);
        $("#chkAllowLike").prop("checked", false);
        $("#chkAllowComments").prop("checked", false);
        $("#chkAllowShare").prop("checked", false);
        document.getElementById('divFooter').style.visibility = 'hidden';


        $("#AddContentModal").modal('show');




    }

    var TopicId = [];
    function TopicSelectionChanged(s, e) {
        LMSTopicGridLookup.gridView.GetSelectedFieldValues("TOPIC_ID", GetTopicSelectedFieldValuesCallback);
    }
    function GetTopicSelectedFieldValuesCallback(values) {
        try {
            TopicId = [];
            for (var i = 0; i < values.length; i++) {
                TopicId.push(values[i]);
            }
            $("#hdnTopicID").val(TopicId);
        } finally {
            console.log(TopicId);
        }
    }

    var CategoryId = [];
    function CategorySelectionChanged(s, e) {
        LMSCategoryGridLookup.gridView.GetSelectedFieldValues("CATEGORYID", GetCategorySelectedFieldValuesCallback);
    }
    function GetCategorySelectedFieldValuesCallback(values) {
        try {
            CategoryId = [];
            for (var i = 0; i < values.length; i++) {
                CategoryId.push(values[i]);
            }
            $("#hdnCategoryID").val(CategoryId);
        } finally {
            console.log(CategoryId);
        }
    }

    function OpenLMSContentforEdit(ContentId) {
        $("#hdnAddEditMode").val('EDITCONTENT');
        $("#hdnContentID").val(ContentId);
        //LMSTopicGridLookup.gridView.UnselectAllRowsOnPage();


        $.ajax({
            url: "@Url.Action("ShowContentDetails", "LMSContentUpload")",
            async: false,
            data: { ContentId: ContentId },
            type: 'POST',
            success: function (data) {

                $("#txtContentTitle").val(data[0].ContentTitle);
                $("#txtContentDesc").val(data[0].ContentDesc);
                $("#ddlTopic").val(data[0].TopicIds);
                $("#numPlaySequence").val(data[0].PlaySequence);
                $("#chkStatus").prop("checked", data[0].Status);
                $("#chkAllowLike").prop("checked", data[0].AllowLike);
                $("#chkAllowComments").prop("checked", data[0].AllowComments);
                $("#chkAllowShare").prop("checked", data[0].AllowShare);
                document.getElementById('divFooter').style.visibility = 'hidden';

                //$("#hdnTopicID").val(data[0].TopicIds);

                //var topicids = data[0].TopicIds.split(', ');
                //LMSTopicGridLookup.SetValue(topicids);

                $('#AddContentModal').modal('show');
                },
            error: function () {
            },
        });
    }




    function OnClickDeleteLMSContent(ContentId) {
        var url = '/LMSContentUpload/DeleteContent/';

        Swal.fire({
            title: 'Confirm Delete?',
            text: "Are you sure you want to delete this content?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: JSON.stringify({ 'ContentId': ContentId }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response == "-10") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error in Delete.'
                            });
                            //GridShow();
                        }
                        else if (response == "1") {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted',
                                text: 'Successfully Deleted.'
                            }).then(() => {
                                gridLMSContent.Refresh();
                            });
                            //GridShow();
                        }
                        else {
                            Swal.fire({
                                icon: 'info',
                                title: 'Info',
                                text: response
                            });
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while deleting the content.'
                        });
                    }
                });
            }
        });
    }

    function ShowTotalContents(e) {

        Is_PageLoad = 'TotalContents';
        /*gridLMSContent.Refresh();*/

    }

    function ShowActiveContents(e) {
        Is_PageLoad = 'ActiveContents';
        /*gridLMSContent.Refresh();*/

    }

    function ShowInactiveContents(e) {
        Is_PageLoad = 'InactiveContents';
        /*gridLMSContent.Refresh();*/
    }

    function OnStartCallbackQuestion(s, e) {
        e.customArgs["Is_ContentId"] = Is_ContentId;
        e.customArgs["Is_ContentTitle"] = Is_ContentTitle;
    }

    function MapQuestionWithContent(ContentId, ContentTitle) {
        Is_ContentId = ContentId;
        Is_ContentTitle = ContentTitle;
        gridQuestionMapGridList.Refresh();
        gridQuestionMapGridList.Refresh();

        $("#hdnAddEditMode").val('MAPQUESTION');
        $("#hdnContentID").val(ContentId);
        $("#MapQuestionListModal").modal('show');
    }

    function AddContentQuestionMap(ContentId, ContentTitle) {
        $("#hdnAddEditMode").val('ADDCONTENTQUESTIONMAP');
        $("#hdnContentID").val(ContentId);
        lblContent.textContent = ContentTitle;
        $("#transfer1").html('');
        LMSTopicGridLookup.SetValue();
        LMSCategoryGridLookup.SetValue();

        //$("#txtContentTitle").val('');
        //$("#txtContentDesc").val('');
        //$("#ddlTopic").val(0);
        //LMSTopicGridLookup.SetValue();
        //$("#numPlaySequence").val(1);
        //$("#chkStatus").prop("checked", true);
        //$("#chkAllowLike").prop("checked", false);
        //$("#chkAllowComments").prop("checked", false);
        //$("#chkAllowShare").prop("checked", false);

        $("#AddQuestionMapModal").modal('show');
    }

    var SelectedQuestionMapList;
    function ShowQuestionsClick() {
        SelectedQuestionMapList = '';
        var obj = {};
        obj.TopicIds = $("#hdnTopicID").val();
        obj.CategoryIds = $("#hdnCategoryID").val();
        obj.ContentId = $("#hdnContentID").val();

        $.ajax({
            type: "POST",
            url: "/LMSContentUpload/GetQuestionListForMap",
            data: JSON.stringify(obj),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (data) {
                console.log(data)
                var temArr2 = [];
                //var data = response.d;
                for (var a = 0; a < data.length; a++) {
                    if (data[a].selected) {
                        temArr2.push(data[a].ID);
                    }
                }
                SelectedQuestionMapList = temArr2.join(",");
                $("#transfer1").html('');

                var tabNameText = 'Questions';
                var rightTabNameText = 'Select Questions';
                var searchPlaceholderText = 'search in Questions';

                var settings1 = {
                    "dataArray": data,
                    "itemName": "NAME",
                    "valueName": "ID",
                    "tabNameText": tabNameText,
                    "rightTabNameText": rightTabNameText,
                    "searchPlaceholderText": searchPlaceholderText,
                    "callable": function (items) {
                        //console.dir(items)
                        var temArr = [];
                        for (var i = 0; i < items.length; i++) {
                            temArr.push(items[i].ID);
                        }
                        SelectedQuestionMapList = temArr.join(",");
                    }
                };
                $("#transfer1").transfer(settings1);
            }
        });
    }

    function SaveContentQuestionMap() {
        Swal.fire({
            title: 'Are you sure you want to assign?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, save it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {

                if (SelectedQuestionMapList == "" || SelectedQuestionMapList == null) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Alert',
                        text: 'Please select Questions.'
                    }).then(() => {
                        setTimeout(() => {
                            $("#btnShowQuestions").focus();
                        }, 200);
                    });
                    return;
                }

                var data = {
                    ContentID: $("#hdnContentID").val(),
                    SelectedQuestionMapList: SelectedQuestionMapList,
                    Action: $("#hdnAddEditMode").val()
                }

                $.ajax({
                    url: '@Url.Action("SaveContentQuestionMap", "LMSContentUpload")',
                    type: 'POST',
                    data: { data: data },
                    success: function (returnValue) {
                        if (returnValue.RETURN_VALUE == "-10") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error in Add.'
                            });
                        } else if (returnValue.RETURN_VALUE == "-20") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error in Update.'
                            });
                        } else if (returnValue.RETURN_VALUE == "0" && returnValue.RETURN_DUPLICATEMAPNAME != "") {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'Question(s) assigned successfully. Content already mapped with the follwoing questions:\n' + returnValue.RETURN_DUPLICATEMAPNAME
                            }).then(() => {
                                $('#AddQuestionMapModal').modal('hide');

                            });
                            gridQuestionMapGridList.Refresh();
                        } else if (returnValue.RETURN_VALUE == "0" && returnValue.RETURN_DUPLICATEMAPNAME == "") {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'Question(s) assigned successfully.'
                            }).then(() => {
                                $('#AddQuestionMapModal').modal('hide');

                            });
                            gridQuestionMapGridList.Refresh();
                        } else if (returnValue.RETURN_VALUE == "1") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Content already mapped with the follwoing questions:\n' + returnValue.RETURN_DUPLICATEMAPNAME
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while saving the topic.'
                        });
                    }
                });
            }
        });
    }

    function OpenMapQuesforEdit(ContentId, ContentTitle) {

        $("#hdnAddEditMode").val('EDITCONTENTQUESTIONMAP');
        $("#hdnContentID").val(ContentId);
        lblContent.textContent = ContentTitle;
        $("#transfer1").html('');
        LMSTopicGridLookup.SetValue();
        LMSCategoryGridLookup.SetValue();

        $.ajax({
            url: "@Url.Action("ShowContentDetailsForEdit", "LMSContentUpload")",
            async: false,
            data: { ContentId: ContentId },
            type: 'POST',
            success: function (data) {
                console.log(data)
                var temArr2 = [];
                //var data = response.d;
                for (var a = 0; a < data.length; a++) {
                    if (data[a].selected) {
                        temArr2.push(data[a].ID);
                    }
                }
                SelectedQuestionMapList = temArr2.join(",");
                $("#transfer1").html('');

                var tabNameText = 'Questions';
                var rightTabNameText = 'Select Questions';
                var searchPlaceholderText = 'search in Questions';

                var settings1 = {
                    "dataArray": data,
                    "itemName": "NAME",
                    "valueName": "ID",
                    "tabNameText": tabNameText,
                    "rightTabNameText": rightTabNameText,
                    "searchPlaceholderText": searchPlaceholderText,
                    "callable": function (items) {
                        //console.dir(items)
                        var temArr = [];
                        for (var i = 0; i < items.length; i++) {
                            temArr.push(items[i].ID);
                        }
                        SelectedQuestionMapList = temArr.join(",");
                    }
                };
                $("#transfer1").transfer(settings1);

                $('#AddQuestionMapModal').modal('show');
            },
            error: function () {
            },
        });
    }

    function OnClickDeleteMapQues(ContentID) {
        var url = '/LMSContentUpload/QuestionMapDelete/';

        Swal.fire({
            title: 'Confirm Delete?',
            text: "Are you sure you want to delete this content?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: JSON.stringify({ 'ContentID': ContentID }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response == "-10") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error in Delete.'
                            });
                            //GridShow();

                        }
                        else if (response == "1") {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted',
                                text: 'Successfully Deleted.'
                            }).then(() => {
                                gridLMSTopic.Refresh();
                            });
                            //GridShow();
                            gridQuestionMapGridList.Refresh();
                        }
                        else {
                            Swal.fire({
                                icon: 'info',
                                title: 'Info',
                                text: response
                            });
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while deleting the content.'
                        });
                    }
                });
            }
        });
    }

    function OnStartCallbackMappedQuestion(s, e) {
        e.customArgs["Is_ContentId"] = Is_ContentId;
        e.customArgs["Is_ContentTitle"] = Is_ContentTitle;
    }

    function OpenMappedQuestionsForView(ContentId, ContentTitle) {
        Is_ContentId = ContentId;
        Is_ContentTitle = ContentTitle;
        lblContentQ.textContent = ContentTitle;

        gridMappedQuesForView.Refresh();
        gridMappedQuesForView.Refresh();

        $("#hdnContentID").val(Is_ContentId);
        $("#MappedQuestionsForViewModal").modal('show');
    }

    $(document).ready(function () {
        $('#AddContentModal').on('shown.bs.modal', function () {
            $('#txtContentTitle').focus();
        });
    });

    function NextButtonClick() {
        document.getElementById('divFooter').style.visibility = 'visible';

    }

    function PreviousButtonOnClick() {
        document.getElementById('divFooter').style.visibility = 'hidden';

    }


</script>

<script>
    $(document).ready(function () {
        var current_fs, next_fs, previous_fs; // fieldsets
        var left, opacity, scale; // fieldset properties which we will animate
        var animating; // flag to prevent quick multi-click glitches

        function showFirstFieldset() {
            var first_fs = $("#msform fieldset:first");
            var all_fs = $("#msform fieldset");

            all_fs.hide(); // Hide all fieldsets
            first_fs.show(); // Show the first fieldset

            // Reset the progress bar
            $("#progressbar li").removeClass("active");
            $("#progressbar li:first").addClass("active");

            // Reset any styles applied to the fieldsets
            all_fs.css({
                'transform': 'none',
                'position': 'relative',
                'left': '0',
                'opacity': '1'
            });
        }

        $(".upload-next").click(function () {
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            // Activate next step on progressbar using the index of next_fs
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            // Show the next fieldset
            next_fs.show();
            // Hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    // As the opacity of current_fs reduces to 0 - stored in "now"
                    // 1. Scale current_fs down to 80%
                    scale = 1 - (1 - now) * 0.2;
                    // 2. Bring next_fs from the right (50%)
                    left = (now * 50) + "%";
                    // 3. Increase opacity of next_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({
                        'transform': 'scale(' + scale + ')',
                        'position': 'absolute'
                    });
                    next_fs.css({ 'left': left, 'opacity': opacity });
                },
                duration: 200,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                easing: 'easeInOutBack'
            });
        });

        $(".upload-previous").click(function () {
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            // De-activate current step on progressbar
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");
            $("#progressbar li").eq($("fieldset").index(previous_fs)).addClass("active");

            // Show the previous fieldset
            previous_fs.show();
            // Hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    // As the opacity of current_fs reduces to 0 - stored in "now"
                    // 1. Scale previous_fs from 80% to 100%
                    scale = 0.8 + (1 - now) * 0.2;
                    // 2. Take current_fs to the right (50%) - from 0%
                    left = ((1 - now) * 50) + "%";
                    // 3. Increase opacity of previous_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'left': left, 'position': 'absolute' });
                    previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity, 'position': 'relative' });
                },
                duration: 200,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                easing: 'easeInOutBack'
            });
        });

        $('#AddContentModal').on('show.bs.modal', function () {
            // Reset the form to the first step when the modal is shown
            showFirstFieldset();
        });

        $('#AddContentModal').on('hide.bs.modal', function () {
            // Reset the form to the first step when the modal is hidden
            showFirstFieldset();
        });
    });


</script>





<div class="breadCumb">
    <span>Content</span>
</div>

<div class="container ">
    <div class="row">
        <div class="col-md-12">
            <div class="backBox mt-5 p-4">
                <div class="">
                    <div class="col-md-12  buttons-alignment" style="padding-top: 0; margin-bottom: 5px;">
                        <div class="add-show-btns">
                            @*@if (ViewBag.CanAdd){*@
                            <button type="button" class="btn add-btn add-new-btn" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" onclick="AddContent();">
                                <span class="btn-icon"><i class="fa fa-plus"></i></span> New Content
                            </button>
                            @*}*@

                            @*@if (ViewBag.CanView){*@
                            <button type="button" id="btnshow" class="btn show-btn" tabindex=4>
                                <span class="btn-icon"><i class="fa fa-play" aria-hidden="true"></i></span> Show Data
                            </button>
                            @*}*@
                        </div>

                        <div class="count-filter-btns">

                            @*@if (ViewBag.CanView){*@
                            <button type="button" class="btn btn-total btn-radius bg-color-6" id="btnShowTotalContents" onclick="ShowTotalContents();">
                                <h5>Total content(s)</h5> <span class="filter-count">0</span>
                            </button>

                            @*}*@

                            @*@if (ViewBag.CanView){*@
                            <button type="button" class="btn btn-total-used btn-radius bg-color-6" id="btnShowActiveContents" onclick="ShowActiveContents();">
                                <h5>Active content(s)</h5> <span class="filter-count">0</span>
                            </button>

                            @*}*@

                            @*@if (ViewBag.CanView){*@
                            <button type="button" class="btn btn-total-unused btn-radius bg-color-6" id="btnShowInactiveContents" onclick="ShowInactiveContents();">
                                <h5>Inactive content(s)</h5> <span class="filter-count">0</span>
                            </button>

                            @*}*@

                        </div>
                    </div>


                    <div class="clear"></div>
                </div>
                <div class="clear"></div>
                <div class="clearfix"></div>

                @*<div class="scrooler">
                        <div id="refreshgrid">
                            @{
                                Html.RenderAction("PartialContentGridList", "LMSContentUpload", new { Is_PageLoad = "Ispageload" });
                            }
                        </div>
                    </div>*@

                <div class="content-listing-part" id="contentListing" style="display: none; margin-top: 35px">
                    <div id="searchPanel" class="row" style="display: none;">

                        <div class="col-md-6 content-search-box mb-4">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by video title">
                            <button id="btnSearch" class="btn btn-primary"><i class="fa fa-search" aria-hidden="true"></i></button>
                            <button id="btnShowAll" class="btn add-btn"><img src="../../../assests/images/undo.svg">Reset</button>
                        </div>

                        <div class="col-md-6">
                            <nav aria-label="Page navigation">
                                <ul class="pagination" id="paginationContainer"></ul>
                            </nav>
                        </div>
                    </div>
                    <div class="row mt-3" id="videoContainer"></div>
                    
                </div>

            </div>
        </div>
    </div>
</div>


<div id="AddContentModal" class="modal fade pmsModal w80" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            @using (Html.BeginForm("SaveContent", "LMSContentUpload", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                    @*<h4 class="modal-title">Create Content</h4>*@
                </div>
                <div class="modal-body">

                    <div id="msform">
                        <ul id="progressbar">
                            <li class="active">
                                
                                <h5>Content Details</h5>
                            </li>
                            <li>
                                
                                <h5>Upload Content</h5>
                            </li>

                        </ul>
                        <fieldset>
                            <div class="row clearfix mb-5">
                                <div class="col-lg-12 mb-3">
                                    <h3>Tell Us about your content</h3>

                                </div>
                                <div class="col-lg-12 mb-4 text-left">
                                    <label>Content Title<span style="color: red">*</span></label>
                                    <input type="text" id="txtContentTitle" name="txtContentTitle" class="form-control" maxlength="250" />
                                </div>
                                <div class="col-lg-12 mb-4 text-left">
                                    <label>Content Description<span style="color: red">*</span></label>
                                    <input type="text" id="txtContentDesc" name="txtContentDesc" class="form-control" maxlength="250" />
                                </div>
                                <div class="col-lg-6 mb-5 text-left">
                                    <div class="flex-label"><label>Select Topic</label> <a href="#"><i class="fa fa-plus"></i>Create topic</a></div>
                                    @Html.DropDownListFor(m => m.TopicId, new SelectList(Model.TopicList, "TOPIC_ID", "TOPIC_NAME", Model.TopicId), new { @id = "ddlTopic", @class = "form-control" })
                                </div>
                                <div class="col-lg-6 mb-5 text-left">
                                    <label>Play Sequence</label>
                                    <input type="number" id="numPlaySequence" name="numPlaySequence" class="form-control" maxlength="100" min="1" />
                                </div>
                                
                                <div class="clear"></div>
                                <div class="clearfix">
                                    <div class="col-lg-3">
                                        <label>Publish</label>
                                        <button type="button" class="btn btn-sm btn-toggle active" id="chkStatus" name="chkStatus" data-toggle="button" aria-pressed="true" autocomplete="off">
                                            <div class="handle"></div>
                                        </button>
                                        @*<div class="active-checkbox"><input type="checkbox" id="chkStatus" name="chkStatus" class="styled-checkbox" checked /><label>Active</label></div>*@
                                    </div>
                                    <div class="col-lg-3">
                                        @*<div><input type="checkbox" id="chkAllowLike" name="chkAllowLike" class="styled-checkbox" /><label>Allow like</label></div>*@
                                        <label>Like</label>
                                        <button type="button" class="btn btn-sm btn-toggle" id="chkAllowLike" name="chkAllowLike" data-toggle="button" aria-pressed="true" autocomplete="off">
                                            <div class="handle"></div>
                                        </button>
                                    </div>
                                    <div class="col-lg-3">
                                        @*<div><input type="checkbox" id="chkAllowComments" name="chkAllowComments" class="styled-checkbox" /><label>Allow comments</label></div>*@
                                        <label>Comments</label>
                                        <button type="button" class="btn btn-sm btn-toggle" id="chkAllowLike" name="chkAllowLike" data-toggle="button" aria-pressed="true" autocomplete="off">
                                            <div class="handle"></div>
                                        </button>
                                    </div>
                                    <div class="col-lg-3">
                                        @*<div><input type="checkbox" id="chkAllowShare" name="chkAllowShare" class="styled-checkbox" /><label>Allow share</label></div>*@
                                        <label>Share</label>
                                        <button type="button" class="btn btn-sm btn-toggle" id="chkAllowLike" name="chkAllowLike" data-toggle="button" aria-pressed="true" autocomplete="off">
                                            <div class="handle"></div>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <input type="button" name="next" class="upload-next action-button btn-primary" value="Next" onclick="NextButtonClick()" />


                        </fieldset>
                        <fieldset>
                            <div class="col-md-8 col-md-offset-2">
                                <h3>Upload your content</h3>
                                <div class=" mb-5">
                                    <div class="form-group text-left">
                                        <label>Choose File:</label>
                                        <div class="clearfix">
                                            @*<div class="custom-file">
                                                <input type="file" id="fileupload" name="fileupload" class="custom-file-input" accept=".mp4" />
                                            </div>*@
                                            <div class="custom-file">
                                                <input type="file" id="fileupload" name="fileupload" class="custom-file-input" accept=".mp4" />
                                                <label class="custom-file-label upload-btn" for="fileupload">
                                                    <img src="../../../assests/images/upload.svg"> Upload
                                                </label>
                                                <div class="file-name" id="file-name"></div>
                                            </div>
                                            
                                        </div>
                                    </div>
                                    <p class="text-muted red" style="color:red">Supported types: MP4 (File size limited to @ViewBag.LMSVideoUploadSize MB)</p>
                                    <div class="progress" style="display: none">
                                        <div class="bar"></div>
                                        <div class="percent">0%</div>
                                    </div>
                                    <div id="status"></div>
                                </div>
                            </div>

                            @*<div class="col-md-6  text-left">
                            <label>Thumbnail:</label>
                            <div class="thumbnail-box">
                                <button type="button" class="btn btn-success"><img src="~/assests/images/up-loading.svg"/> Upload</button>
                                Or
                                <button type="button" class="btn btn-export"><img src="~/assests/images/create-img.svg" /> Create Thumbnail</button>
                            </div>
                        </div>*@
                            <div class="clear"></div>

                            <input type="hidden" id="hdnAddEditMode" name="hdnAddEditMode" />
                            <input type="hidden" id="hdnContentID" name="hdnContentID" />
                            <input type="hidden" id="hdnFileDuration" name="hdnFileDuration" />
                            <input type="hidden" id="hdnTopicID" name="hdnTopicID" />
                            <input type="hidden" id="hdnCategoryID" name="hdnCategoryID" />


                            <input type="button" name="previous" class="upload-previous action-button-previous btn btn-success" value="Previous" onclick="PreviousButtonOnClick()" />
                            @*<input type="submit" class="submit action-button" value="Submit" />*@
                            @*<button type="submit" class="submit action-button">Upload & Exit</button>*@

                        </fieldset>

                    </div>
                   
                    <div class="clearfix">

                        <div class="col-lg-7">

                        </div>

                        <div class="col-md-5">

                        </div>

                    </div>
                    @*<div class="clearfix">


                </div>*@
                    @*<div class="clearfix">

                </div>*@



                    <div class="clear"></div>
                    <div class="clearfix"></div>


                </div>

                <div class="" id="divFooter">
                    <button type="submit" class="btn btn-success upload-exit-btn">Upload & Exit</button>
                    @*<button type="button" class="btn btn-danger" data-dismiss="modal">Cancel & Exit</button>*@
                </div>
            }
        </div>
    </div>
</div>

<div id="MapQuestionListModal" class="modal fade pmsModal w80" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <h4 class="modal-title">Map Question List</h4>
            </div>

            <div class="modal-body">
                <div class="clearfix">
                    <div class="col-md-12  buttons-alignment" style="padding-top: 0; margin-bottom: 15px;">
                        <div class="add-show-btns">
                            @*@if (ViewBag.CanAdd){*@
                            <button type="button" class="btn add-btn" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" onclick="AddContentQuestionMap(Is_ContentId, Is_ContentTitle);">
                                <span class="btn-icon"><i class="fa fa-plus"></i></span> Map Question
                            </button>
                            @*}*@

                            @*@if (ViewBag.CanExport){*@
                            <button type="button" id="btnExportTo" class="btn btn-success btn-export" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false">
                                <span class="btn-icon"><img src="/assests/images/xlsx.png" /></span>&nbsp; Export to XLSX
                            </button>
                            @*}*@
                        </div>
                    </div>
                </div>

                <div class="clear"></div>
                <div class="clearfix"></div>

                <div class="clearfix">
                    <div class="scrooler">
                        <div id="refreshgrid">
                            @{
                                Html.RenderAction("PartialQuestionMapGridList", "LMSContentUpload", new { Is_ContentId = "0" });
                            }
                        </div>
                    </div>
                </div>

            </div>

            <input type="hidden" id="hdnContentIDForMap" name="hdnContentIDForMap" />

        </div>

    </div>
</div>

<div id="AddQuestionMapModal" class="modal fade pmsModal w80" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <h4 class="modal-title">Map Question</h4>
            </div>
            <div class="modal-body">
                <div class="clearfix">
                    <div class="col-lg-12 map-content-title">
                        <label><b>For the Content : </b></label>
                        <label id="lblContent"></label>
                    </div>
                </div>

                <div class="clear"></div>
                <div class="clearfix"></div>

                <div class="clearfix">
                    <div class="col-lg-5">
                        <label>Filter Question on Topic(s)</label>
                        @Html.Action("GetLMSTopicList", "LMSContentUpload")
                    </div>
                    <div class="col-lg-5">
                        <label>Filter Question on Categories(s)</label>
                        @Html.Action("GetLMSCategoriesList", "LMSContentUpload")
                    </div>
                    <div class="col-lg-2" style=" margin-top: 25px;">
                        <button type="button" id="btnShowQuestions" class="btn btn-success" onclick="ShowQuestionsClick();">Show Question(s)</button>
                    </div>
                </div>
                <div class="clearfix">
                    <div class="col-md-12 mt-15">

                        <div>
                            <div id="transfer1" class="transfer-demo"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="SaveContentQuestionMap();">Assign & Exit</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel & Exit</button>

            </div>
        </div>

    </div>
</div>
<div id="MappedQuestionsForViewModal" class="modal fade pmsModal w80" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <h4 class="modal-title">Mappped Questions</h4>
            </div>

            <div class="modal-body">
                <div class="clearfix">
                    <div class="col-lg-12">
                        <label><b>For the Content : </b></label>
                        <label id="lblContentQ"></label>
                    </div>
                </div>

                <div class="clear"></div>
                <div class="clearfix"></div>

                <div class="clearfix">
                    <div class="scrooler">
                        <div id="refreshgrid">
                            @{
                                Html.RenderAction("PartialMappedQuesForView", "LMSContentUpload", new { Is_ContentId = "0" });
                            }
                        </div>
                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Exit</button>

            </div>
        </div>

    </div>
</div>

<script>


    // scripts.js

    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('multiStepForm');
        if (form) {
            const steps = form.querySelectorAll('.step');
            let currentStep = 0;

            showStep(currentStep);

            form.addEventListener('click', function (event) {
                if (event.target.classList.contains('next')) {
                    currentStep++;
                    showStep(currentStep);
                } else if (event.target.classList.contains('prev')) {
                    currentStep--;
                    showStep(currentStep);
                }
            });

            form.addEventListener('submit', function (event) {
                event.preventDefault();
                alert('Form submitted!');
                // Add form submission logic here
            });

            function showStep(step) {
                steps.forEach((fieldset, index) => {
                    if (index === step) {
                        fieldset.style.display = 'block';
                    } else {
                        fieldset.style.display = 'none';
                    }
                });
            }
        }
    });


</script>